$orbit-size: 280px;
$min-planet-size: 50px;
$planet-count: 100;
$root-planet-count: 3;
$colors: #DE6555,
		 #E04A5C,
		 #A22C65,
		 #16A59F,
		 #15AE7D;

.orbit-container {
	display: flex;
	flex-wrap: wrap;
	min-height: 440px;
	width: 100%;
	left: 0;
	transform: translate-x(-100%);
	position: absolute;
	overflow-x: hidden;
	overflow-y: hidden;
}

.orbit__name {
	margin: 0;
	padding: 0 .5rem;
	width: $orbit-size - $min-planet-size;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	position: absolute;
	box-sizing: border-box;
	z-index: 1;
	color: $white;
	text-align: center;
	opacity: .6;

	> span{
		display: block;
		color: $watusi;
	}
}

.orbit {
	width: $orbit-size;
	height: $orbit-size;
	margin: 50px auto 0;
	position: relative;
}

.star {
	width: $orbit-size - $min-planet-size;
	height: $orbit-size - $min-planet-size;
	background-image: url('../../lib/images/star.png');
	background-size: cover;
	border-radius: 50%;
	border: 2px solid $watusi;
	position: relative;
	top: $min-planet-size / 2;
	left: $min-planet-size / 2;
	z-index: 0;
}

.orbit-wrapper {
	width: $min-planet-size;
	position: absolute;
	top: 0;
	left: ($orbit-size - $min-planet-size) / 2;
	transform: translate3d(0,0,0);
	pointer-events: none;
}

.planet {
	width: $min-planet-size;
	height: $min-planet-size;
	border-radius: 50%;
	box-sizing: border-box;
}

@for $i from 1 through $planet-count {
	$rotation: random(360);
	$border: 100 + random(60);
	$planet-size: $min-planet-size + random(30);
	$border-width: random(16);
	$opacity: random(10);
	$speed: 10 + 100/random(10);
	$color-key: random( length($colors) );
	$color: nth( $colors, $color-key );

	@keyframes planet-#{$i} {
		0% {
			transform: translate3d(0,0,0) rotate(#{$rotation}deg);
		}
		100% {
			transform: translate3d(0,0,0) rotate(#{$rotation + 360}deg);
		}
  	}

	.orbit-wrapper--#{$i} {
		animation: planet-#{$i} #{$speed}s linear infinite;

		.planet {
			display: inline-block;
			margin: #{$border}px ;
			width: $planet-size - $border * 2;
			height: $planet-size - $border * 2;
			opacity: 0.4 + (0.6/$opacity);
			background-color: $color;
			border: #{$border-width}px solid darken($color, 30%);
			pointer-events: auto;
			cursor: pointer;

			&:hover {
				opacity: 1;
			}
		}
	}
}

@for $i from 1 through $root-planet-count {
	$border: random(30);
	$border-width: random(4);
	$speed: 10 + 100/random(10);
	$color-key: random( length($colors) );
	$color: nth( $colors, $color-key );

	@keyframes satellite-#{$i} {
		from { transform: rotate(0deg) translateX(30px) rotate(0deg); }
		to   { transform: rotate(360deg) translateX(30px) rotate(-360deg); }
	}

	.satellite--#{$i} {
		position: absolute;
		width: $min-planet-size / 3;
		height: $min-planet-size / 3;
		margin: #{$border}px;
		box-sizing: border-box;
		background-color: $color;
		border-radius: 50%;
		border: #{$border-width}px solid darken($color, 30%);
		opacity: .75;
		animation: satellite-#{$i} #{$speed}s linear infinite;
	}
}

.pause-trajectory {
	-webkit-animation-play-state: paused;
    -moz-animation-play-state: paused;
    -o-animation-play-state: paused;
	animation-play-state: paused;
}

.scout-planet {
	animation: scout .3s ease-in-out forwards;
}

.leave-planet {
	animation: scout .3s ease-in-out backwards;
}

.hide-satellite {
	opacity: 0;
	transition: opacity .3s;
}

.ai-details {
	margin-top: 25rem;
	position: relative;
	z-index: 200;
}

.ai-details__properties {
	li {
		margin: 1.6rem 0;

		&:last-of-type {
			margin-bottom: 4rem;
		}
	}

	label {
		display: block;
		margin: .2rem 0;
		color: $watusi;
		font-size: $smallFontSize;
	}

	span {
		color: $white;
		font-size: $bodyFontFamily;
	}
}

@keyframes scout {
	0% {
	  transform: scale(1);
	}

	100% {
	  transform: scale(1.2);
	}
}

//Altered code from https://muffinman.io/sass-random-and-circle-animation/